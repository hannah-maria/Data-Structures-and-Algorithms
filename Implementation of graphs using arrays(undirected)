#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

struct Graph {
    int vertices;
    int matrix[MAX_VERTICES][MAX_VERTICES];
};

// Initialize a graph with the given number of vertices
void initGraph(struct Graph* graph, int vertices) {
    graph->vertices = vertices;
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            graph->matrix[i][j] = 0;
        }
    }
}

// Add an edge between two vertices
void addEdge(struct Graph* graph, int start, int end) {
    if (start >= 0 && start < graph->vertices && end >= 0 && end < graph->vertices) {
        graph->matrix[start][end] = 1;
        graph->matrix[end][start] = 1; // Since it's an undirected graph
    }
}

// Display the graph's adjacency matrix
void displayGraph(struct Graph* graph) {
    printf("Adjacency Matrix:\n");
    for (int i = 0; i < graph->vertices; i++) {
        for (int j = 0; j < graph->vertices; j++) {
            printf("%d ", graph->matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    struct Graph graph;
    int vertices, edges, start, end;

    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);

    initGraph(&graph, vertices);

    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < edges; i++) {
        printf("Enter edge %d (start end): ", i + 1);
        scanf("%d %d", &start, &end);
        addEdge(&graph, start, end);
    }

    displayGraph(&graph);

    return 0;
}
